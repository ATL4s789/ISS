Anleitung zur Installation:

==============================================
Voraussetzungen
==============================================

Mindestanforderungen:
Linux-OS (root)
gcc
nginx
fcgiwrap
mysqlserver
libmysqlclient-dev
bash
Internetzugang

Zum Bearbeiten der Software und Erledigen zusätzlicher Aufgaben nützlich:
geany (Text Editor)
codeblocks (C C++ usw. IDE)
codeblocks-contrib (Plugins (u.a. ENV-Varibales) für codeblocks)
ufw (Konfigurationsassistent für die Firewall)
dnsutils (Werkzeuge für dns)


==============================================
Anleitung
==============================================

1. Pakete installieren

Für die Mindestanforderungen:
	sudo apt-get update
	sudo apt-get upgrade
	sudo apt-get install libmysqlclient-dev mysqlserver nginx bash gcc

Für Zusätzliche Dinge
	sudo apt-get install geany codeblocks codeblocks-contrib ufw dnsutils

2. Software Konfigurieren
	Die für die Konfiguration des nginx-Webservers, des fcgiwrappers
	und des mysqlservers erforderlichen Dateien befinden sich im
	Ordner "./etc" parallel zu diesem Dokument und müssen in den entsprechenden 
	"etc" Ordner des zu konfigurierenden Systems kopiert werden.

	cp ./etc/nginx/fastcgi_params /etc/nginx/fastcgi_params
	cp ./etc/nginx/nginx.conf /etc/nginx/nginx.conf
	cp ./etc/nginx/sites-available/default /etc/nginx/sites-available/default
	cp ./etc/mysql/my.cf /etc/mysql/my.cf
	
	Die für de Firewall erforderlichen Regeln lauten wie folgt.

	[ 1] 443/tcp                    ALLOW IN    Anywhere
	[ 2] 80/tcp                     ALLOW IN    Anywhere
	[ 3] 22/tcp                     ALLOW IN    <nach Bedarf>

	Um https nutzen zu können muss ein ssl-Zertifikat bereitgestellt werden.
	--> Selbst eines erzeugen, z. B. mit:
	https://www.digitalocean.com/community/tutorials/how-to-create-an-ssl-certificate-on-nginx-for-ubuntu-14-04	
	
	<aus Datei ./etc/nginx/sites-available/default>
	[...]
	ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;
	[...]

3. Dateien Kopieren
	Den Inhalt des Ordners ./html (html-, css-, js- usw. Dateien) rekursiv (mit allen Unterordnern)
	in das Hauptverzeichnis des nginx-Servers kopieren 
	(nach derzeitiger Konfiguration: /usr/share/nginx/html)

	Die mysql-Datenbank erzeugen und mihilfe des "mysqldump" ./mysql_base/base5.sql
	die Struktur der Datenbank herstellen

	echo "CREATE DATABASE base5" | mysql -p -u root
	cat ./mysql_base/base5 | mysql -p -u root base5

4. (Optional) C-Programme kompilieren
	Falls die schon kompilierten Programme in ./html/cgi-bin/ nicht ausführbar sind
	(CPU Architektur usw. passt nicht) müssen diese neu kompiliert werden.
	Dazu eignet sich die Entwicklungsumgebung codeblocks
	oder ein (noch nicht erstelltes) Makefile.
